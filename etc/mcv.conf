#    Copyright 2015 Mirantis, Inc
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.

#
# MCVConsoler configuration file
#

[basic]
concurrency=1
gre_enabled=False
vlan_amount=1
auth_protocol=https
logdir=/var/log
logfile=mcvconsoler.log

# Parameter 'instance_ip' is a floating IP address if you run MCV tool as
# a cloud instance. Otherwise it's a public network IP (for L2-segment).
# Read more about network settings https://mirantis.jira.com/wiki/pages/viewpage.action?pageId=255133282
#instance_ip=1.1.7.2

#
# Auth configuration
#

[fuel]
# If you want to use CA certificates, please fill this section
#username=admin
#password=admin
#nailgun_host=1.1.7.4
#cluster_id=1
#ssh_cert=/root/.ssh/id_rsa

[auth]
# If you want to run MCV as an instance, please fill this section
#os_username=admin
#os_tenant_name=admin
#os_password=admin
#auth_endpoint_ip=1.1.7.5
#region_name=RegionOne
#auth_fqdn=public.fuel.local
#
# Please make sure you enabled PasswordAuthentification on this controller!
#controller_ip=1.1.7.7
#controller_pwd=r00tme
#controller_uname=root

# Private key from master node for nw testing
#ssh_key=/home/mcv/id_rsa

#
# Tools configuration
#

# Configuration for Rally tests
[rally]
runner=RallyOnDockerRunner
max_failed_tests=10

# Configuration for Rally Certification Task
[certification]
services=authentication,neutron,cinder,glance,nova,keystone
controllers_amount=1
computes_amount=2
storage_amount=1
tenants_amount=1
users_amount=1
network_amount=1

# Configuration for tests of Scalability
[scale]
concurrency = 5

# Configuration for Rally workload tests
[workload]
# Configuration for SaaS workload test
instance_count=2
concurrency=1
# Configuration for BigData workload test
# Specified in Kb, recommended value is 10000000
file_size=10000
workers_count=3
# Test flavor configuration
ram=8096
disc=20
vcpu=4

# Configuration for Tempest tests
[tempest]
runner=TempestOnDockerRunner
max_failed_tests=100

# Configuration for OSTF tests
[ostf]
runner=OSTFOnDockerRunner
# Please set version to 6.1 or 7.0 according to version of your MOS
version=7.0
max_failed_tests=10

# Configuration for Resource tests
[resources]
runner=ResourceReportRunner
#max_failed_tests=5

# Configuration for Shaker tests (networking)
[shaker]
runner=ShakerOnDockerRunner
shaker_image=-1
cleanup=True
timeout=1200
max_failed_tests=1
image_name=shaker-image
flavor_name=shaker-flavor
#network_ext_name=net04_ext

# Configuration for network speed tests
[network_speed]
# Threshold of network speed specified in Gb/s
#threshold=7
network_name=net04

# Configuration for speed tests
[speed]
runner=SpeedTestRunner
# Path to cirros image
#cirros_image_path=/home/mcv/toolbox/rally/images/cirros-0.3.1-x86_64-disk.img
# Flavor requirements. Supported params: ram, vcpus, disk
#flavor_req=ram:64,vcpus:1
# Test image/volume size specified in Gb (G) or Mb (M)
#image_size=1G
#volume_size=1G
# Threshold of storage speed specified in Mb/s
#threshold=50
#max_failed_tests=10
# Limit compute nodes quantity
# compute_nodes_limit=2
# Limit attempts for each write(upload)/read(download) iteration
# attempts=3

[nwspeed]
runner=NWSpeedTestRunner
# Speed threshold in Mb\s
#threshold=100
# Allowable range of values in percents
#range=10
# Port for testing network speed in admin network
#test_port=5903
# Data size for testing in megabytes
#data_size=100

[selfcheck]
runner=SelfCheckRunner

# Configuration for Test running statistics
[times]
# Change this value if you need to update the database with
# time of executing tests
update = False

#
# Test groups
#

[custom_test_group_quick]
resources=ErrorResourceSearch,GeneralResourceSearch
ostf=SanityIdentityTest,SanityComputeTest,GlanceSanityTests,
  SanityHeatTest,NetworksTest,GlanceSmokeTests,
  FlavorsAdminTest,VolumesTest,TestImageAction,
  HeatSmokeTests:test_actions,
  HeatSmokeTests:test_advanced_actions,
  HeatSmokeTests:test_update,
  HeatSmokeTests:test_rollback,
# HeatSmokeTests:test_autoscaling,
# HeatSmokeTests
#
# Uncomment if you have Murano installed
#  ,MuranoSanityTests
#
# Uncomment if you have Sahara installed
#  ,VanillaTwoTemplatesTest,HDPTwoTemplatesTest
#
# Uncomment if you have Ceilometer installed
#  ,CeilometerApiTests
#

[custom_test_group_selfcheck]
selfcheck=BasicSelfCheck

[custom_test_group_functional]
# By default run all available tempest sets
tempest=scenario, smoke, baremetal, compute, database, data_processing,
         identity, image, messaging, network, object_storage, orchestration, telemetry, volume

[custom_test_group_smoke]
rally=certification

[custom_test_group_speed]
speed=ObjectStorageSpeed,BlockStorageSpeed
shaker=same_node.yaml, different_nodes.yaml, floating_ip.yaml, different_nodes_threads_10.yaml, full_l3_east_west.yaml
nwspeed=Node2NodeSpeed

[custom_test_group_workload]
rally=workload.yaml,big-data-workload.yaml

[custom_test_group_scale]
rally = load-ceilometer-create-alarm.yaml,load-ceilometer-create-and-delete-alarm.yaml,
  load-ceilometer-create-and-list-alarm.yaml,load-ceilometer-create-and-query-alarm-history.yaml,
  load-ceilometer-create-and-query-alarms.yaml,load-ceilometer-create-and-query-samples.yaml,
  load-ceilometer-create-and-update-alarm.yaml,load-ceilometer-create-meter-and-get-stats.yaml,
  load-ceilometer-list-alarms.yaml,load-ceilometer-list-meters.yaml,load-ceilometer-list-resources.yaml,
  load-cinder-create-and-attach-volume.yaml,load-cinder-create-and-delete-snapshot.yaml,
  load-cinder-create-and-delete-volume.yaml,load-cinder-create-and-extend-volume.yaml,
  load-cinder-create-and-list-snapshots.yaml,load-cinder-create-and-list-volume.yaml,
  load-cinder-create-and-upload-volume-to-image.yaml,load-cinder-create-from-volume-and-delete-volume.yaml,
  load-cinder-create-snapshot-and-attach-volume.yaml,
  load-glance-create-and-delete-image.yaml,load-glance-create-and-list-image.yaml,
  load-glance-create-image-and-boot-instances.yaml,load-glance-list_images.yaml,
  load-heat-create-and-delete-stack_with_neutron.yaml,load-heat-create-and-delete-stack_with_volume.yaml,
  load-heat-create-and-delete-stack.yaml,load-heat-create-and-list-stack.yaml,
  load-heat-create-check-delete-stack.yaml,load-heat-create-suspend-resume-delete-stack.yaml,
  load-heat-create-update-delete-stack-add-res.yaml,load-heat-create-update-delete-stack-del-res.yaml,
  load-heat-create-update-delete-stack-increase.yaml,load-heat-create-update-delete-stack-inplace.yaml,
  load-heat-create-update-delete-stack-reduce.yaml,load-heat-create-update-delete-stack-replace.yaml,
  load-heat-list-stack-and-resources.yaml,load-keystone-create-and-delete-user.yaml,
  load-keystone-create-and-list-tenants.yaml,load-keystone-create-and-list-users.yaml,
  load-keystone-create-tenant-with-users.yaml,load-neutron-create_and_delete_networks.yaml,
  load-neutron-create_and_delete_ports.yaml,load-neutron-create_and_delete_routers.yaml,
  load-neutron-create_and_delete_subnets.yaml,load-neutron-create_and_list_networks.yaml,
  load-neutron-create_and_list_ports.yaml,load-neutron-create_and_list_routers.yaml,
  load-neutron-create_and_list_subnets.yaml,load-neutron-create_and_update_networks.yaml,
  load-neutron-create_and_update_ports.yaml,load-neutron-create_and_update_routers.yaml,
  load-neutron-create_and_update_subnets.yaml,load-neutron-update_quotas.yaml,
  load-nova-boot_and_bounce_server.yaml,load-nova-boot_and_delete_server_with_keypair.yaml,
  load-nova-boot_and_delete_server_with_secgroups.yaml,load-nova-boot_and_delete_server.yaml,
  load-nova-boot_and_list_server_batch_all_at_once.yaml,load-nova-boot_and_list_server_batch_x10.yaml,
  load-nova-boot_and_list_server.yaml,load-nova-boot_and_migrate_server.yaml,
  load-nova-boot_and_rebuild_server.yaml,load-nova-boot_server_from_volume_and_delete.yaml,
  load-nova-boot_server_from_volume_and_live_migrate.yaml,load-nova-create_and_delete_keypair.yaml,
  load-nova-create_and_delete_secgroups.yaml,load-nova-create_and_list_keypairs.yaml,
  load-nova-create_and_list_secgroups.yaml,load-nova-nova-update-and-delete.yaml,
  load-nova-pause_and_unpause.yaml,load-nova-resize_server.yaml,
  load-nova-snapshot_server.yaml,load-nova-suspend_and_resume.yaml,
  load-swift-create-container-and-object-then-delete-all.yaml,
  load-swift-create-container-and-object-then-download-object.yaml,
  load-swift-create-container-and-object-then-list-objects.yaml,
  load-swift-list-and-download-objects-in-containers.yaml,
  load-swift-list-objects-in-containers.yaml
